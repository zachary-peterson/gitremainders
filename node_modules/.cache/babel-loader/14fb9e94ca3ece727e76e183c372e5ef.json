{"ast":null,"code":"import { CHAT, CONVERSATION_ADD, CONVERSATION_MINUS, CONVERSATION_RESET, RETURN_WILDCARD_INFO } from '../actions';\nconst initialState = {\n  counter: 0,\n  test: [{\n    message: '1. Services'\n  }, {\n    message: '2. About'\n  }, {\n    message: '3. Contact'\n  }, {\n    message: '4. Other'\n  }],\n  wildcard: {}\n};\nexport const chatBotReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHAT:\n      return { ...state,\n        test: [...state.test, action.payload]\n      };\n\n    case CONVERSATION_ADD:\n      return { ...state,\n        counter: Math.round(state.counter + 1)\n      };\n\n    case CONVERSATION_MINUS:\n      return { ...state,\n        counter: Math.round(state.counter - 1)\n      };\n\n    case CONVERSATION_RESET:\n      return { ...state,\n        counter: 0\n      };\n\n    case RETURN_WILDCARD_INFO:\n      return { ...state,\n        wildcard: state.wildcard\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/zachary/code/gitremainders/src/store/reducers/chatBotReducer.js"],"names":["CHAT","CONVERSATION_ADD","CONVERSATION_MINUS","CONVERSATION_RESET","RETURN_WILDCARD_INFO","initialState","counter","test","message","wildcard","chatBotReducer","state","action","type","payload","Math","round"],"mappings":"AAAA,SACIA,IADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,EAKIC,oBALJ,QAMO,YANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,OAAO,EAAE;AADb,GADE,EAIF;AACIA,IAAAA,OAAO,EAAE;AADb,GAJE,EAOF;AACIA,IAAAA,OAAO,EAAE;AADb,GAPE,EAUF;AACIA,IAAAA,OAAO,EAAE;AADb,GAVE,CAFW;AAgBjBC,EAAAA,QAAQ,EAAE;AAhBO,CAArB;AAmBA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,IAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB;AAFH,OAAP;;AAIJ,SAAKb,gBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,OAAO,EAAES,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAFN,OAAP;;AAIJ,SAAKJ,kBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,OAAO,EAAES,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAFN,OAAP;;AAIJ,SAAKH,kBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKF,oBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,QAAQ,EAAEE,KAAK,CAACF;AAFb,OAAP;;AAIJ;AACI,aAAOE,KAAP;AA3BR;AA6BH,CA9BM","sourcesContent":["import {\n    CHAT,\n    CONVERSATION_ADD,\n    CONVERSATION_MINUS,\n    CONVERSATION_RESET,\n    RETURN_WILDCARD_INFO\n} from '../actions'\n\nconst initialState = {\n    counter: 0,\n    test: [\n        {\n            message: '1. Services'\n        },\n        {\n            message: '2. About'\n        },\n        {\n            message: '3. Contact'\n        },\n        {\n            message: '4. Other'\n        },\n],\n    wildcard: {}\n}\n\nexport const chatBotReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CHAT:\n            return {\n                ...state,\n                test: [...state.test, action.payload]\n            }\n        case CONVERSATION_ADD:\n            return {\n                ...state,\n                counter: Math.round(state.counter + 1)\n            }\n        case CONVERSATION_MINUS:\n            return {\n                ...state,\n                counter: Math.round(state.counter - 1)\n            }\n        case CONVERSATION_RESET:\n            return {\n                ...state,\n                counter: 0\n            }\n        case RETURN_WILDCARD_INFO:\n            return {\n                ...state,\n                wildcard: state.wildcard\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}