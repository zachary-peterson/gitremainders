{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zachary/code/remainders/src/components/Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nconst form = {\n  message: ''\n}; //  I think what I'm trying today will leverage node\n\nexport const Landing = () => {\n  _s();\n\n  const [chatFunction, setChatFunction] = useState(form);\n  const test = useSelector(state => state.chatBotReducer.test);\n\n  const handleChanges = e => {\n    e.preventDefault();\n    setChatFunction({ ...chatFunction,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [test.length > 0 ? test.map(msg => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: handleChanges,\n        value: chatFunction.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Landing, \"HdRLhOkMdZNgU/dw7PgZdx4x0GQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/home/zachary/code/remainders/src/components/Landing.js"],"names":["React","useState","useSelector","form","message","Landing","chatFunction","setChatFunction","test","state","chatBotReducer","handleChanges","e","preventDefault","target","name","value","length","map","msg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE;AADA,CAAb,C,CAIA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACE,IAAD,CAAhD;AACA,QAAMK,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,IAA/B,CAAxB;;AAEA,QAAMG,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACM,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA7C,KAAD,CAAf;AACH,GAHD;;AAOA,sBACI;AAAA,eAGQR,IAAI,CAACS,MAAL,GAAc,CAAd,GAAkBT,IAAI,CAACU,GAAL,CAASC,GAAG,IAAI;AAC9B,0BACI;AAAA,+BACI;AAAA,oBAAIA,GAAG,CAACf;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANiB,CAAlB,GAMK,IATb,eAYI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,QAAQ,EAAEO,aAHd;AAII,QAAA,KAAK,EAAEL,YAAY,CAACF;AAJxB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CApCM;;GAAMC,O;UAEIH,W;;;KAFJG,O","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst form = {\n    message: '',\n}\n\n//  I think what I'm trying today will leverage node\n\nexport const Landing = () => {\n    const [chatFunction, setChatFunction] = useState(form);\n    const test = useSelector(state => state.chatBotReducer.test)\n\n    const handleChanges = e => {\n        e.preventDefault();\n        setChatFunction({ ...chatFunction, [e.target.name]: e.target.value })\n    }\n\n\n\n    return (\n        <div>\n\n            {\n                test.length > 0 ? test.map(msg => {\n                    return (\n                        <div>\n                            <p>{msg.message}</p>\n                        </div>\n                    )\n                }) : null\n            }\n\n            <form>\n                <label htmlFor='message'>Chat</label>\n                <input \n                    type='text'\n                    name='message'\n                    onChange={handleChanges}\n                    value={chatFunction.message}\n                />\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}