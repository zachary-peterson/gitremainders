{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zachary/code/gitremainders/src/components/Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { chatFunctionality } from '../store';\nconst form = {\n  message: '',\n  time: 0\n}; //  I think what I'm trying today will leverage node\n\nexport const Chatbot = () => {\n  _s();\n\n  const [chatFunction, setChatFunction] = useState(form);\n  const test = useSelector(state => state.chatBotReducer.test);\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.chatBotReducer.counter);\n  const mName = useSelector(state => state.dateReducer.mName);\n  console.log(mName);\n\n  const handleChanges = e => {\n    e.preventDefault();\n    setChatFunction({ ...chatFunction,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    chatFunction.time = counter;\n    chatFunction.wildcard = mName;\n    dispatch(chatFunctionality(chatFunction));\n    setChatFunction(form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot__messages\",\n      children: test.length > 0 ? test.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)\n        }, msg.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: handleChanges,\n        value: chatFunction.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chatbot, \"fNI0qUpb1qskdrAnHWZJfaqUjvM=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Chatbot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"sources":["/home/zachary/code/gitremainders/src/components/Chatbot.js"],"names":["React","useState","useSelector","useDispatch","chatFunctionality","form","message","time","Chatbot","chatFunction","setChatFunction","test","state","chatBotReducer","dispatch","counter","mName","dateReducer","console","log","handleChanges","e","preventDefault","target","name","value","handleSubmit","wildcard","length","map","msg"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,UAAlC;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,EADA;AAETC,EAAAA,IAAI,EAAE;AAFG,CAAb,C,CAKA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAACI,IAAD,CAAhD;AACA,QAAMM,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,IAA/B,CAAxB;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGb,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBE,OAA/B,CAA3B;AACA,QAAMC,KAAK,GAAGd,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACK,WAAN,CAAkBD,KAA5B,CAAzB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACY,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA7C,KAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAGL,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,YAAY,CAACF,IAAb,GAAoBQ,OAApB;AACAN,IAAAA,YAAY,CAACkB,QAAb,GAAwBX,KAAxB;AACAF,IAAAA,QAAQ,CAACV,iBAAiB,CAACK,YAAD,CAAlB,CAAR;AACAC,IAAAA,eAAe,CAACL,IAAD,CAAf;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAEQM,IAAI,CAACiB,MAAL,GAAc,CAAd,GAAkBjB,IAAI,CAACkB,GAAL,CAASC,GAAG,IAAI;AAC9B,4BACI;AAAA,iCACI;AAAA,sBAAIA,GAAG,CAACxB;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUwB,GAAG,CAACvB,IAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANiB,CAAlB,GAMK;AARb;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,QAAQ,EAAEa,aAHd;AAII,QAAA,KAAK,EAAEX,YAAY,CAACH;AAJxB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAQ,QAAA,OAAO,EAAEoB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAhDM;;GAAMlB,O;UAEIN,W,EACIC,W,EACDD,W,EACFA,W;;;KALLM,O","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { chatFunctionality } from '../store';\n\nconst form = {\n    message: '',\n    time: 0\n}\n\n//  I think what I'm trying today will leverage node\n\nexport const Chatbot = () => {\n    const [chatFunction, setChatFunction] = useState(form);\n    const test = useSelector(state => state.chatBotReducer.test);\n    const dispatch = useDispatch();\n    const counter = useSelector(state => state.chatBotReducer.counter)\n    const mName = useSelector(state => state.dateReducer.mName);\n\n    console.log(mName);\n\n    const handleChanges = e => {\n        e.preventDefault();\n        setChatFunction({ ...chatFunction, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        chatFunction.time = counter;\n        chatFunction.wildcard = mName;\n        dispatch(chatFunctionality(chatFunction));\n        setChatFunction(form)\n    }\n\n    return (\n        <div>\n            <div className='chatbot__messages'>\n                {\n                    test.length > 0 ? test.map(msg => {\n                        return (\n                            <div key={msg.time}>\n                                <p>{msg.message}</p>\n                            </div>\n                        )\n                    }) : null\n                }\n            </div>\n\n            <form className='chatbot'>\n                <label htmlFor='message'>Chat</label>\n                <input \n                    type='text'\n                    name='message'\n                    onChange={handleChanges}\n                    value={chatFunction.message}\n                />\n                <button onClick={handleSubmit}>Submit</button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}