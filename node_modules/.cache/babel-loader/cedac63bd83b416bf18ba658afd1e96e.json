{"ast":null,"code":"export const CHAT = 'CHAT';\nexport const CONVERSATION_ADD = 'CONVERSATION_ADD';\nexport const CONVERSATION_MINUS = 'CONVERSATION_MINUS';\nexport const RETURN_WILDCARD_INFO = 'RETURN_WILDCARD_INFO';\nexport const chatFunctionality = msg => dispatch => {\n  // this is the start of the chat functioniality\n  // the msg is the users input from landing\n  dispatch({\n    type: CHAT,\n    payload: msg\n  }); // this is to keep track of how long the conversation\n  // has been going on for, adding to the length opens\n  // up more options for differnet conversation trees.\n\n  dispatch({\n    type: CONVERSATION_ADD\n  }); // I set a timeout because otherwise the response is\n  // instant and it's actually really creepy.\n  // if you take the timeout off the responses will be\n  // instantaneous\n\n  setTimeout(() => {\n    dispatch({\n      type: CHAT,\n      payload: {\n        message: \"Hello, World\"\n      }\n    });\n  }, 2000);\n};","map":{"version":3,"sources":["/home/zachary/code/remainders/src/store/actions/chatBotActions.js"],"names":["CHAT","CONVERSATION_ADD","CONVERSATION_MINUS","RETURN_WILDCARD_INFO","chatFunctionality","msg","dispatch","type","payload","setTimeout","message"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,iBAAiB,GAAIC,GAAD,IAAUC,QAAD,IAAc;AACpD;AACA;AACAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,IAAR;AAAcQ,IAAAA,OAAO,EAAEH;AAAvB,GAAD,CAAR,CAHoD,CAKpD;AACA;AACA;;AACAC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR,CARoD,CAUpD;AACA;AACA;AACA;;AACAQ,EAAAA,UAAU,CAAC,MAAM;AAEbH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,IAAR;AAAcQ,MAAAA,OAAO,EAAE;AAACE,QAAAA,OAAO,EAAE;AAAV;AAAvB,KAAD,CAAR;AACH,GAHS,EAGP,IAHO,CAAV;AAIH,CAlBM","sourcesContent":["export const CHAT = 'CHAT';\nexport const CONVERSATION_ADD = 'CONVERSATION_ADD';\nexport const CONVERSATION_MINUS = 'CONVERSATION_MINUS'\nexport const RETURN_WILDCARD_INFO = 'RETURN_WILDCARD_INFO';\n\nexport const chatFunctionality = (msg) => (dispatch) => {\n    // this is the start of the chat functioniality\n    // the msg is the users input from landing\n    dispatch({ type: CHAT, payload: msg });\n    \n    // this is to keep track of how long the conversation\n    // has been going on for, adding to the length opens\n    // up more options for differnet conversation trees.\n    dispatch({ type: CONVERSATION_ADD });\n\n    // I set a timeout because otherwise the response is\n    // instant and it's actually really creepy.\n    // if you take the timeout off the responses will be\n    // instantaneous\n    setTimeout(() => {\n        \n        dispatch({ type: CHAT, payload: {message: \"Hello, World\"}});\n    }, 2000);\n}"]},"metadata":{},"sourceType":"module"}